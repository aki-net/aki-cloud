worker_processes auto;
worker_rlimit_nofile 524288;
error_log /var/log/nginx/error.log warn;

events {
    use epoll;
    multi_accept on;
    worker_connections 8192;
}

http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    real_ip_recursive on;

    map $http_x_forwarded_for $client_real_ip {
        ""                         $remote_addr;
        ~^\s*(?P<first>[^,\s]+).*  $first;
    }

    map $http_x_forwarded_for $edge_forwarded_for {
        ""      $client_real_ip;
        default $http_x_forwarded_for;
    }

    limit_req_status 429;
    limit_conn_status 429;
    limit_req_log_level warn;
    limit_conn_log_level warn;
    limit_req_zone $client_real_ip zone=edge_req_per_ip:32m rate={{ .LimitReqPerIP }}r/s;
    limit_req_zone $server_name zone=edge_req_per_host:32m rate={{ .LimitReqPerHost }}r/s;
    limit_conn_zone $client_real_ip zone=edge_conn_per_ip:16m;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    reset_timedout_connection on;
    client_header_timeout 10s;
    client_body_timeout 10s;
    send_timeout 30s;
    keepalive_timeout 30s;
    keepalive_requests 1000;
    lingering_timeout 15s;
    client_body_buffer_size 16k;
    client_max_body_size {{ .ClientMaxBodySize }};
    large_client_header_buffers 4 16k;

    proxy_buffering on;
    proxy_buffers 16 16k;
    proxy_buffer_size 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;
    proxy_max_temp_file_size 0;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;

    {{- if .CacheEnabled }}
    proxy_cache_path {{ .CachePath }} levels={{ .CacheLevels }} keys_zone={{ .CacheZoneName }}:{{ .CacheKeysZone }} max_size={{ .CacheMaxSize }} inactive={{ .CacheInactive }} use_temp_path=off;
    proxy_cache_lock on;
    proxy_cache_lock_timeout 5s;
    proxy_cache_revalidate on;
    proxy_cache_background_update on;
    proxy_cache_min_uses {{ .CacheMinUses }};
    {{- if .CacheUseStale }}
    proxy_cache_use_stale {{ .CacheUseStale }};
    {{- end }}
    {{- end }}

    map $request_method $edge_cache_method_skip {
        default 1;
        GET 0;
        HEAD 0;
    }

    map $http_cache_control $edge_cache_cc_skip {
        default 0;
        ~*no-cache 1;
        ~*no-store 1;
    }

    map $http_authorization $edge_cache_auth_skip {
        default 0;
        ~.+ 1;
    }

    map $http_cookie $edge_cache_cookie_skip {
        default 0;
        {{- if and .CacheEnabled .CacheBypassCookies }}
        {{- range .CacheBypassCookies }}
        ~*{{ . }} 1;
        {{- end }}
        {{- end }}
    }

    map $upstream_http_set_cookie $edge_cache_set_cookie_skip {
        default 0;
        ~.+ 1;
    }

    map "$edge_cache_method_skip$edge_cache_cc_skip$edge_cache_auth_skip$edge_cache_cookie_skip$edge_cache_set_cookie_skip" $edge_cache_skip {
        default 0;
        ~1 1;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    {{- if .SearchBotLogging.Enabled }}
    log_format searchbot '$msec\t$edge_searchbot_key\t$time_iso8601\t$host\t$request_method\t$request_uri\t$status\t$body_bytes_sent\t$http_user_agent';

    map $http_user_agent $edge_searchbot_key {
        default "";
        {{- range .SearchBotLogging.Bots }}
        ~*{{ .Regex }} {{ .Key }};
        {{- end }}
    }

    map $edge_searchbot_key $edge_searchbot_log {
        default "";
        {{- range .SearchBotLogging.Bots }}
        {{ .Key }} {{ .LogPath }};
        {{- end }}
    }

    map $edge_searchbot_log $edge_searchbot_log_enabled {
        default 1;
        "" 0;
    }
    {{- end }}

    include {{ .SitesDir }}/*.conf;
}
